tip_colors <- rep("black", length(tree2$tip.label))
names(tip_colors) <- tree2$tip.label
# Set colors for clades
tip_colors[tree2$tip.label %in% clade1$tip.label] <- "red"
tip_colors[tree2$tip.label %in% clade2$tip.label] <- "orange"
tip_colors[tree2$tip.label %in% clade3$tip.label] <- "yellow"
tip_colors[tree2$tip.label %in% clade4$tip.label] <- "blue"
tip_colors[tree2$tip.label %in% clade5$tip.label] <- "green"
tip_colors[tree2$tip.label %in% clade6$tip.label] <- "purple"
# Highlight extinct languages in red and italic
label_styles <- ifelse(tree2$tip.label %in% extinct_langs,
yes = 3,  # font=3 for italic
no = 1)
# Plot the tree
plot(tree2,
tip.color = tip_colors,
cex = 0.8,
font = label_styles,
label.offset = 0.01
)
# Assign colors to clades â€” just as an example using groups of tips
clade1 <- extract.clade(tree2, node = 80)  # Find a clade from a node
clade2 <- extract.clade(tree2, node = 70)
clade3 <- extract.clade(tree2, node = 67)
clade4 <- extract.clade(tree2, node = 61)
clade5 <- extract.clade(tree2, node = 50)
clade6 <- extract.clade(tree2, node = 47)
# Color vector: default to black
tip_colors <- rep("black", length(tree2$tip.label))
names(tip_colors) <- tree2$tip.label
# Set colors for clades
tip_colors[tree2$tip.label %in% clade1$tip.label] <- "red"
tip_colors[tree2$tip.label %in% clade2$tip.label] <- "orange"
tip_colors[tree2$tip.label %in% clade3$tip.label] <- "yellow"
tip_colors[tree2$tip.label %in% clade4$tip.label] <- "blue"
tip_colors[tree2$tip.label %in% clade5$tip.label] <- "green"
tip_colors[tree2$tip.label %in% clade6$tip.label] <- "purple"
# Highlight extinct languages in red and italic
label_styles <- ifelse(tree2$tip.label %in% extinct_langs,
yes = 3,  # font=3 for italic
no = 1)
# Plot the tree
plot(tree2,
tip.color = tip_colors,
cex = 0.8,
font = label_styles,
label.offset = 0.01
)
plot(tree2,
main = "Phylogenetic Tree",
tip.color = tip_colors,
cex = 0.8,
font = label_styles,
edge.width = 2,
label.offset = 0.01
)
plot(tree2,
main = "Phylogenetic Tree",
tip.color = tip_colors,
cex = 0.8,
font = label_styles,
edge.width = 1,
label.offset = 0.01
)
plot(tree2,
main = "Phylogenetic Tree",
tip.color = tip_colors,
cex = 0.8,
font = label_styles,
edge.width = 1.5,
label.offset = 0.01
)
tip_colors[tree2$tip.label %in% clade1$tip.label] <- "steelblue"
tip_colors[tree2$tip.label %in% clade2$tip.label] <- "darkorange"
tip_colors[tree2$tip.label %in% clade3$tip.label] <- "forestgreen"
tip_colors[tree2$tip.label %in% clade4$tip.label] <- "firebrick"
tip_colors[tree2$tip.label %in% clade5$tip.label] <- "orchid"
tip_colors[tree2$tip.label %in% clade6$tip.label] <- "goldenrod"
# Plot the tree
plot(tree2,
tip.color = tip_colors,
cex = 0.8,
font = label_styles,
edge.width = 2,
label.offset = 0.01
)
# Plot the tree
plot(tree2,
tip.color = tip_colors,
cex = 0.7,
font = label_styles,
edge.width = 2,
label.offset = 0.01
)
axisPhylo(1)
# Plot the tree
plot(tree2,
tip.color = tip_colors,
cex = 0.8,
font = label_styles,
edge.width = 2,
label.offset = 0.01
)
axisPhylo(1)
plot(tree2,
type = "phylogram",
direction = "rightwards"
tip.color = tip_colors,
plot(tree2,
type = "phylogram",
direction = "rightwards",
tip.color = tip_colors,
cex = 0.8,
font = label_styles,
edge.width = 2,
label.offset = 0.01
)
axisPhylo(backward = TRUE)
title("Indo-European tree")
plot(tree2,
type = "phylogram",
direction = "rightwards",
tip.color = tip_colors,
cex = 0.8,
font = label_styles,
edge.width = 2,
label.offset = 0.01
)
axisPhylo(backward = TRUE)
plot(tree2,
type = "phylogram",
direction = "rightwards",
tip.color = tip_colors,
cex = 0.7,
font = label_styles,
edge.width = 2,
label.offset = 0.01
)
axisPhylo(backward = TRUE)
par(mar = c(6, 4, 4, 2))  # increase bottom margin
plot(tree2,
type = "phylogram",
direction = "rightwards",
tip.color = tip_colors,
cex = 0.8,
font = label_styles,
edge.width = 2,
label.offset = 0.01
)
axisPhylo(backward = TRUE)
title("Indo-European tree")
par(mar = c(1, 1, 1, 1))  # increase bottom margin
plot(tree2,
type = "phylogram",
direction = "rightwards",
tip.color = tip_colors,
cex = 0.8,
font = label_styles,
edge.width = 2,
label.offset = 0.01
)
axisPhylo(backward = TRUE)
title("Indo-European tree")
par(mar = c(2, 1, 1, 1))  # increase bottom margin
plot(tree2,
type = "phylogram",
direction = "rightwards",
tip.color = tip_colors,
cex = 0.8,
font = label_styles,
edge.width = 2,
label.offset = 0.01
)
axisPhylo(backward = TRUE)
title("Indo-European tree")
par(mar = c(1, 0, 0, 0))  # increase bottom margin
plot(tree2,
type = "phylogram",
direction = "rightwards",
tip.color = tip_colors,
cex = 0.8,
font = label_styles,
edge.width = 2,
label.offset = 0.01
)
axisPhylo(backward = TRUE)
title("Indo-European tree")
par(mar = c(1, 0, 0, 0))  # increase bottom margin
plot(tree2,
type = "phylogram",
direction = "rightwards",
tip.color = tip_colors,
cex = 0.8,
font = label_styles,
edge.width = 2,
label.offset = 0.01
)
axisPhylo(backward = TRUE)
title("Indo-European tree")
par(mar = c(2, 1, 1, 1))  # increase bottom margin
plot(tree2,
type = "phylogram",
direction = "rightwards",
tip.color = tip_colors,
cex = 0.8,
font = label_styles,
edge.width = 2,
label.offset = 0.01
)
axisPhylo(backward = TRUE)
title("Indo-European tree")
par(mar = c(2, 1, 1, 1))  # increase bottom margin
plot(tree2,
type = "phylogram",
direction = "rightwards",
tip.color = tip_colors,
cex = 0.7,
font = label_styles,
edge.width = 2,
label.offset = 0.01
)
axisPhylo(backward = TRUE)
title("Indo-European tree")
par(mar = c(2, 1, 1, 1))  # increase bottom margin
plot(tree2,
type = "phylogram",
direction = "rightwards",
tip.color = tip_colors,
cex = 0.7,
font = label_styles,
edge.width = 1.5,
label.offset = 0.01
)
axisPhylo(backward = TRUE)
title("Indo-European tree")
plot(tree2,
type = "phylogram",
direction = "rightwards",
tip.color = tip_colors,
cex = 0.8,
font = label_styles,
edge.width = 2,
label.offset = 0.01
)
axisPhylo(backward = TRUE)
title("Inferred Phylolinguistic Tree of 45 Indo-European Languages")
plot(tree2,
type = "phylogram",
direction = "rightwards",
tip.color = tip_colors,
cex = 0.7,
font = label_styles,
edge.width = 1.5,
label.offset = 0.01
)
axisPhylo(backward = TRUE)
title("Inferred Phylolinguistic Tree of 45 Indo-European Languages")
plot(tree2,
type = "phylogram",
direction = "rightwards",
tip.color = tip_colors,
cex = 0.6,
font = label_styles,
edge.width = 1.5,
label.offset = 0.01
)
axisPhylo(backward = TRUE)
title("Inferred Phylolinguistic Tree of 45 Indo-European Languages")
plot(tree2,
type = "phylogram",
direction = "rightwards",
tip.color = tip_colors,
cex = 0.6,
font = label_styles,
edge.width = 1.5,
label.offset = 1
)
axisPhylo(backward = TRUE)
title("Inferred Phylolinguistic Tree of 45 Indo-European Languages")
plot(tree2,
type = "phylogram",
direction = "rightwards",
tip.color = tip_colors,
cex = 0.6,
font = label_styles,
edge.width = 1.5,
label.offset = 10
)
axisPhylo(backward = TRUE)
title("Inferred Phylolinguistic Tree of 45 Indo-European Languages")
plot(tree,
type = "phylogram",
direction = "rightwards",
cex = 0.7,
font = label_styles,
edge.width = 1.5,
label.offset = 0.01
)
axisPhylo(backward = TRUE)
title("Inferred Phylolinguistic Tree of 45 Indo-European Languages")
# Plot posterior support values from two MCC trees
plot_posterior_supports <- function(tree1, tree2) {
# Check for identical topology
if (!isTRUE(all.equal.phylo(tree1, tree2, use.edge.length = FALSE))) {
stop("Trees do not have the same topology.")
}
# Extract posterior support values (assumed to be in node labels)
n_tips <- length(tree1$tip.label)
internal_nodes <- (n_tips + 1):(n_tips + tree1$Nnode)
# Convert node labels to numeric support values
support1 <- as.numeric(tree1$node.label)
support2 <- as.numeric(tree2$node.label)
if (length(support1) != length(internal_nodes) || length(support2) != length(internal_nodes)) {
stop("Mismatch in number of internal nodes and node labels.")
}
# Plot
old_par <- par(no.readonly = TRUE)
par(mar = c(4, 5, 3, 1))
par(las = 1)
plot(support1, support2,
xlab = "Posterior support (Without geographic data)",
ylab = "Posterior support (With geographic data)",
main = "Comparison of Posterior Support in MCC Trees",
pch = 16, col = "purple", xlim = c(0, 1), ylim = c(0, 1))
abline(0, 1, col = "red", lty = 2)
par(old_par)
}
plot_posterior_supports(MCC_tree, MCC_tree_GEO)
MCC_tree
MCC_tree_GEO
plot_posterior_supports <- function(tree1, tree2) {
# Check for identical topology
if (!isTRUE(all.equal.phylo(tree1, tree2, use.edge.length = FALSE))) {
stop("Trees do not have the same topology.")
}
# Extract posterior support values (assumed to be in node labels)
n_tips <- length(tree1$tip.label)
internal_nodes <- (n_tips + 1):(n_tips + tree1$Nnode)
# Plot
old_par <- par(no.readonly = TRUE)
par(mar = c(4, 5, 3, 1))
par(las = 1)
plot(support1, support2,
xlab = "Posterior support (Without geographic data)",
ylab = "Posterior support (With geographic data)",
main = "Comparison of Posterior Support in MCC Trees",
pch = 16, col = "purple", xlim = c(0, 1), ylim = c(0, 1))
abline(0, 1, col = "red", lty = 2)
par(old_par)
}
plot_posterior_supports(MCC_tree, MCC_tree_GEO)
plot_posterior_supports <- function(tree1, tree2) {
# Check for identical topology
if (!isTRUE(all.equal.phylo(tree1, tree2, use.edge.length = FALSE))) {
stop("Trees do not have the same topology.")
}
# Extract posterior support values (assumed to be in node labels)
n_tips <- length(tree1$tip.label)
internal_nodes <- (n_tips + 1):(n_tips + tree1$Nnode)
# Convert node labels to numeric support values
support1 <- as.numeric(tree1$node.label)
support2 <- as.numeric(tree2$node.label)
# Plot
old_par <- par(no.readonly = TRUE)
par(mar = c(4, 5, 3, 1))
par(las = 1)
plot(support1, support2,
xlab = "Posterior support (Without geographic data)",
ylab = "Posterior support (With geographic data)",
main = "Comparison of Posterior Support in MCC Trees",
pch = 16, col = "purple", xlim = c(0, 1), ylim = c(0, 1))
abline(0, 1, col = "red", lty = 2)
par(old_par)
}
plot_posterior_supports(MCC_tree, MCC_tree_GEO)
MCC_tree$Nnode
MCC_tree$node.label
MCC_tree$tip.label
MCC_tree <- read.beast("../trees/pama-nyungan-first-30-MCC.tree")
setwd("~/Desktop/beast/M4R-phylogeography/scripts")
MCC_tree <- read.nexus("../trees/pama-nyungan-first-30-MCC.tree")
MCC_tree <- read.beast("../trees/pama-nyungan-first-30-MCC.tree")
MCC_tree_GEO <- read.nexus("../trees/pama-nyungan-first-30-GEO-MCC.tree")
MCC_tree_GEO <- read.beast("../trees/pama-nyungan-first-30-GEO-MCC.tree")
plot_posterior_supports(MCC_tree, MCC_tree_GEO)
MCC_tree <- ape::read.nexus("../trees/pama-nyungan-first-30-MCC.tree")
MCC_tree_GEO <- ape::read.nexus("../trees/pama-nyungan-first-30-GEO-MCC.tree")
plot_posterior_supports(MCC_tree, MCC_tree_GEO)
plot_posterior_supports <- function(tree1, tree2) {
# Check for identical topology
if (!isTRUE(all.equal.phylo(tree1, tree2, use.edge.length = FALSE))) {
stop("Trees do not have the same topology.")
}
# Extract posterior support values (assumed to be in node labels)
n_tips <- length(tree1$tip.label)
internal_nodes <- (n_tips + 1):(n_tips + tree1$Nnode)
# Convert node labels to numeric support values
tree1 <- as.phylo(tree1)
tree2 <- as.phylo(tree2)
support1 <- as.numeric(tree1$node.label)
support2 <- as.numeric(tree2$node.label)
# Plot
old_par <- par(no.readonly = TRUE)
par(mar = c(4, 5, 3, 1))
par(las = 1)
plot(support1, support2,
xlab = "Posterior support (Without geographic data)",
ylab = "Posterior support (With geographic data)",
main = "Comparison of Posterior Support in MCC Trees",
pch = 16, col = "purple", xlim = c(0, 1), ylim = c(0, 1))
abline(0, 1, col = "red", lty = 2)
par(old_par)
}
plot_posterior_supports(MCC_tree, MCC_tree_GEO)
tree1 <- as.phylo(MCC_tree)
tree1
tree1$edge
View(tree1)
tree2 <- read.beast("../trees/pama-nyungan-first-30-GEO-MCC.tree")
tree1 <- read.beast("../trees/pama-nyungan-first-30-MCC.tree")
View(tree1)
plot_posterior_supports <- function(tree1, tree2) {
tree1 <- read.beast(tree1)
tree2 <- read.beast("tree2")
# Extract posterior support values
support1 <- tree1@data$posterior
support2 <- tree2@data$posterior
# Ensure matching lengths
n <- min(length(support1), length(support2))
support1 <- support1[1:n]
support2 <- support2[1:n]
# Plot
old_par <- par(no.readonly = TRUE)
par(mar = c(4, 5, 3, 1))
par(las = 1)
plot(support1, support2,
xlab = "Posterior support (Without geographic data)",
ylab = "Posterior support (With geographic data)",
main = "Comparison of Posterior Support in MCC Trees",
pch = 16, col = "purple", xlim = c(0, 1), ylim = c(0, 1))
abline(0, 1, col = "red", lty = 2)
par(old_par)
}
plot_posterior_supports(tree1, tree2)
plot_posterior_supports <- function(tree1, tree2) {
#tree1 <- read.beast(tree1)
#tree2 <- read.beast(tree2)
# Extract posterior support values
support1 <- tree1@data$posterior
support2 <- tree2@data$posterior
# Ensure matching lengths
n <- min(length(support1), length(support2))
support1 <- support1[1:n]
support2 <- support2[1:n]
# Plot
old_par <- par(no.readonly = TRUE)
par(mar = c(4, 5, 3, 1))
par(las = 1)
plot(support1, support2,
xlab = "Posterior support (Without geographic data)",
ylab = "Posterior support (With geographic data)",
main = "Comparison of Posterior Support in MCC Trees",
pch = 16, col = "purple", xlim = c(0, 1), ylim = c(0, 1))
abline(0, 1, col = "red", lty = 2)
par(old_par)
}
tree1@data$posterior
support1 <- tree1@data$posterior
support2 <- tree2@data$posterior
plot(support1, support2)
plot_posterior_supports <- function(tree1, tree2) {
#tree1 <- read.beast(tree1)
#tree2 <- read.beast(tree2)
# extract posterior support values
support1 <- tree1@data$posterior
support2 <- tree2@data$posterior
# Plot
old_par <- par(no.readonly = TRUE)
par(mar = c(4, 5, 3, 1))
par(las = 1)
plot(support1, support2,
xlab = "Posterior support (Without geographic data)",
ylab = "Posterior support (With geographic data)",
main = "Comparison of Posterior Support in MCC Trees",
pch = 16, col = "purple", xlim = c(0, 1), ylim = c(0, 1))
abline(0, 1, col = "red", lty = 2)
par(old_par)
}
plot_posterior_supports(tree1, tree2)
par(mar = c(2, 1, 1, 1))  # increase bottom margin
plot(tree,
type = "phylogram",
direction = "rightwards",
tip.color = tip_colors,
cex = 0.7,
font = label_styles,
edge.width = 1.5,
label.offset = 0.01
)
axisPhylo(backward = TRUE)
title("Inferred Phylolinguistic Tree of Indo-European Languages")
par(mar = c(2, 1, 1, 1))  # increase bottom margin
plot(tree,
type = "phylogram",
direction = "rightwards",
cex = 0.7,
font = label_styles,
edge.width = 1.5,
label.offset = 0.01
)
axisPhylo(backward = TRUE)
title("Inferred Phylolinguistic Tree of Indo-European Languages")
